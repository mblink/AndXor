@import andxor.Zipper
@import andxor.syntax._

@(z: Zipper[String], isId: Boolean)
@tpes = @{ z.toList }
@aT = { F[@z.focus] }

@if(isId) {
  implicit def @{tpes.copName}Optional@{z.index}Id[@{tpes.tpeParams}]: Optional[@tpes.copTpeF("Id"), @z.focus] =
    @{tpes.copName}Optional@{z.index}[Id, @{tpes.tpeParams}]
} else {
  implicit def @{tpes.copName}Optional@{z.index}[F[_], @{tpes.tpeParams}]: Optional[@tpes.copTpe, F[@z.focus]] =
    Optional[@{tpes.copTpe}, @aT](c => c.run match {
      case @z.djVal("x") => Some(x)
      case _ => None
    })(x => _ => @{tpes.copTpe}(@z.djVal("x")))
}
